name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 7 * * *'

jobs:
  macos_catalina_build_and_test:
    name: macos catalina build and test
    runs-on: macos-10.15
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: remove-bazelisk
        run: if [[ -e /usr/local/bin/bazelisk ]]; then brew rm bazelisk; fi
        shell: zsh -efuo pipefail {0}
        env:
          HOMEBREW_NO_AUTO_UPDATE: "1"
      - name: setup
        run: ./setup/mac/install_prereqs.sh
        shell: zsh -efuo pipefail {0}
        env: 
          HOMEBREW_NO_AUTO_UPDATE: "1"
      - name: build and test
        run: bazel test //... -c dbg
  macos_big_sur_build_and_test:
    name: macos big_sur build and test
    runs-on: macos-11.0
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: switch to XCode 12.2
        run: sudo xcode-select -s "/Applications/Xcode_12.2.app"
      - name: remove-bazelisk
        run: if [[ -e /usr/local/bin/bazelisk ]]; then brew rm bazelisk; fi
        shell: zsh -efuo pipefail {0}
        env:
          HOMEBREW_NO_AUTO_UPDATE: "1"
      - name: setup
        run: ./setup/mac/install_prereqs.sh
        shell: zsh -efuo pipefail {0}
        env:
          HOMEBREW_NO_AUTO_UPDATE: "1"
      - name: build and test
        run: bazel test //... -c dbg
  ubuntu_focal_build_and_test:
    name: ubuntu-20.04 build and test
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup
        run: sudo ./setup/ubuntu/20.04/install_prereqs.sh
        shell: bash
      - name: build and test
        run: bazel test //... -c dbg
  ubuntu_bionic_build_and_test:
    name: ubuntu 18.04 build and test
    runs-on: ubuntu-18.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup
        run: sudo ./setup/ubuntu/18.04/install_prereqs.sh
        shell: bash
      - name: build and test
        run: bazel test //... -c dbg
  ubuntu_trusty_build_and_test:
    name: ubuntu 16.04 build and test
    runs-on: ubuntu-16.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup
        run: sudo ./setup/ubuntu/16.04/install_prereqs.sh
        shell: bash
      - name: build and test
        run: bazel test //... -c dbg
  docker_build_test:
    name: Docker build test
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: build
        run: docker build -t dreal4_test .
      - name: test
        run: docker run -t dreal4_test dreal "-v"
  docker_pull_test:
    name: Docker pull test
    runs-on: ubuntu-20.04
    steps:
      - name: pull
        run: docker pull dreal/dreal4
      - name: test
        run: docker run -t dreal/dreal4 dreal "-v"
